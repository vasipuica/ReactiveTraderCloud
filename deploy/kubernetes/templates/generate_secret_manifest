#! /bin/bash

# usage
if [[ $# != 2 ]];then
  echo "generate_secret_manifest:"
  echo " -usage:   $0 SECRET_NAME NAMESPACE"
  echo " -example: $0 web-ssl demo"
  echo " "
  exit 1
fi
secret=$1
namespace=$2

set -euo pipefail

# load configuration and libs
root_directory="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )/../../.."
. ${root_directory}/deploy/config

# Validate certificate presence
crt="${root_directory}/deploy/kubernetes/certificates/server.crt"
key="${root_directory}/deploy/kubernetes/certificates/server.key"
if [[ ! -f $crt || ! -f $key ]];then
  echo "no crt and|or key file found in deploy/kubernetes/certificate."
  echo "You can generate certificate by running ${root_directory}/deploy/kubernetes/generateNewCertificates"
  exit 1
fi

# generate base64 of the files
base64=$(which base64)
if [[ $? != 0 ]];then
  echo "generate_secret_manifest: base64 executable needed"
  exit 1
fi
base64crt=$($base64 -i -w 0 $crt)
base64key=$($base64 -i -w 0 $key)

# generating the file
template_file="${root_directory}/deploy/kubernetes/templates/secret/${secret}.yml"
manifest_file="${root_directory}/deploy/kubernetes/manifests/${secret}.yml"
cp  ${template_file} ${manifest_file}
sed -i "s|__NAMESPACE__|$namespace|g"   ${manifest_file}
sed -i "s|__CRT__|$base64crt|g"         ${manifest_file}
sed -i "s|__KEY__|$base64key|g"         ${manifest_file}
